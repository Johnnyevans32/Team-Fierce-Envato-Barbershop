Documentation
**Please note that the codes used here were not 
directly implemented on the website. 
They are only a variation of how they were used on the website.

Bootstrap Carousel
Where property is one of:
•	m - for classes that set margin
•	p - for classes that set padding

Where sides is one of:
•	t - for classes that set margin-top or padding-top
•	b - for classes that set margin-bottom or padding-bottom
•	l - for classes that set margin-left or padding-left
•	r - for classes that set margin-right or padding-right
•	x - for classes that set both *-left and *-right
•	y - for classes that set both *-top and *-bottom
•	blank - for classes that set a margin or padding on all 4 sides of the element
Where size is one of:
•	0 - for classes that eliminate the margin or padding by setting it to 0
•	1 - (by default) for classes that set the margin or padding to $spacer * .25
•	2 - (by default) for classes that set the margin or padding to $spacer * .5
•	3 - (by default) for classes that set the margin or padding to $spacer
•	4 - (by default) for classes that set the margin or padding to $spacer * 1.5
•	5 - (by default) for classes that set the margin or padding to $spacer * 3
•	auto - for classes that set the margin to auto

Bootstrap Container Use
e.g
<div class="container">
  <div class="row">
    <div class="col-sm">
      One of three columns
    </div>
    <div class="col-sm">
      One of three columns
    </div>
    <div class="col-sm">
      One of three columns
    </div>
  </div>
</div>
The above example creates three equal-width columns on small, medium, large, and extra-large devices using our predefined grid classes. Those columns are centered in the page with the parent .container.
Breaking it down, here’s how it works:
•	Containers provide a means to center and horizontally pad your site’s contents. Use .container for a responsive pixel width or .container-fluid for width: 100% across all viewport and device sizes.
•	Rows are wrappers for columns. Each column has horizontal padding (called a gutter) for controlling the space between them. This padding is then counteracted on the rows with negative margins. This way, all the content in your columns is visually aligned down the left side.
•	In a grid layout, content must be placed within columns and only columns may be immediate children of rows.
•	Thanks to flexbox, grid columns without a specified width will automatically layout as equal width columns. For example, four instances of .col-sm will each automatically be 25% wide from the small breakpoint and up. See the auto-layout columns section for more examples.
•	Column classes indicate the number of columns you’d like to use out of the possible 12 per row. So, if you want three equal-width columns across, you can use .col-4.
•	Column widths are set in percentages, so they’re always fluid and sized relative to their parent element.
•	Columns have horizontal padding to create the gutters between individual columns, however, you can remove the margin from rows and padding from columns with .no-gutters on the .row.
•	To make the grid responsive, there are five grid breakpoints, one for each responsive breakpoint: all breakpoints (extra small), small, medium, large, and extra large.
•	Grid breakpoints are based on minimum width media queries, meaning they apply to that one breakpoint and all those above it (e.g., .col-sm-4 applies to small, medium, large, and extra large devices, but not the first xs breakpoint).
•	You can use predefined grid classes (like .col-4) or Sass mixins for more semantic markup.
Be aware of the limitations and bugs around flexbox, like the inability to use some HTML elements as flex co


Bootstrap comes with three different containers:
•	.container, which sets a max-width at each responsive breakpoint
•	.container-fluid, which is width: 100% at all breakpoints
•	.container-{breakpoint}, which is width: 100% until the specified breakpoint


Other Bootstrap Components used:
Buttons
Bootstrap botton button styles for call to actions were used
Small button size was used in creating the prices grid section of the website
Code snippet:
<button type="button" class="btn btn-sm">Small button</button>


Cards
Bootstrap cards was used as a content container for our "price grid" section.

Code snippet: 
<div class="row row-cols-1 row-cols-md-3">
  <div class="col mb-4">
    <div class="card">
      <img src="..." class="card-img-top" alt="...">
      <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
      </div>
    </div>
  </div>
  <div class="col mb-4">
    <div class="card">
      <img src="..." class="card-img-top" alt="...">
      <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
      </div>
    </div>
  </div>
  <div class="col mb-4">
    <div class="card">
      <img src="..." class="card-img-top" alt="...">
      <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content.</p>
      </div>
    </div>

(Bootstrap grid cards was used for the service pricing section 
col-md-4: This class is used when the device size is medium or greater 
than 768px and the maximum width of container is 720px and you want the width equal to 4 columns.)


Carousel
It was used to cycle through images as slides.
Code snippet example:
<div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
  <div class="carousel-inner">
    <div class="carousel-item active">
      <img src="..." class="d-block w-100" alt="...">
    </div>
    <div class="carousel-item">
      <img src="..." class="d-block w-100" alt="...">
    </div>
    <div class="carousel-item">
      <img src="..." class="d-block w-100" alt="...">
    </div>
  </div>
  <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
  </a>
</div>


Card double border
Implemented to achive the frame-like appeal of the "price Grid"
code snippet:
.border-col {
   border:1px double white;
}


Hosting .svg Files on Cloudinary

Hosting .svg files and all photos was done on the cloudinary platform. All images were uploaded from the platform.



Font awesome arrow was used in the footer section as a quick scroll up option for users . An alternative can be glyphicon glyphs in font format.


